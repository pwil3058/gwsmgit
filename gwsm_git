#!/usr/bin/env python3
#
#  Copyright 2016 Peter Williams <pwil3058@gmail.com>
#
# This software is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; version 2 of the License only.
#
# This software is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this software; if not, write to:
#  The Free Software Foundation, Inc., 51 Franklin Street,
#  Fifth Floor, Boston, MA 02110-1301 USA

"""GUI interface wrapper for managing a workspace using git"""

__author__ = "Peter Williams <pwil3058@gmail.com>"

import argparse
import os
import sys

import gi
gi.require_version("Gtk", "3.0")
from gi.repository import Gtk

from gwsmgit_pkg.bab.gui import recollect
from gwsmgit_pkg.bab.gui import dialogue
from gwsmgit_pkg.gui import main_window

parser = argparse.ArgumentParser(description=_("GUI to manage git workspaces"))

parser.add_argument(
    "workspace",
    help=_("Directory containing workspace to be managed"),
    metavar=_("dir"),
    nargs="?"
)

args = parser.parse_args()

recollect.define("workspace", "last_used", recollect.Defn(str, ""))

if args.workspace:
    try:
        os.chdir(args.workspace)
    except OSError as msg:
        sys.stderr.write(str(msg) + "\n")
        sys.exit(2)
else:
    last_dir = recollect.get("workspace", "last_used")
    if os.path.isdir(last_dir):
        try:
            os.chdir(last_dir)
        except OSError as msg:
            pass # open in current directory

try:
    main_window.MainWindow().show()
    Gtk.main()
except SystemExit as edata:
    raise edata # let the usual suspects handle this
except:
    dialogue.ask_for_bug_report(sys.exc_info())
    sys.exit(3)
